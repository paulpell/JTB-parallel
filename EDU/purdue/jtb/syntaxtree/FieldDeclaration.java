//
// Generated by JTB 1.3.1
//

package EDU.purdue.jtb.syntaxtree;

/**
 * Grammar production:
 * f0 -> ( "public" | "protected" | "private" | "static" | "final" | "transient" | "volatile" )*
 * f1 -> Type()
 * f2 -> VariableDeclarator()
 * f3 -> ( "," VariableDeclarator() )*
 * f4 -> ";"
 */
public class FieldDeclaration implements Node {
   public NodeListOptional f0;
   public Type f1;
   public VariableDeclarator f2;
   public NodeListOptional f3;
   public NodeToken f4;

   public FieldDeclaration(NodeListOptional n0, Type n1, VariableDeclarator n2, NodeListOptional n3, NodeToken n4) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = n4;
   }

   public FieldDeclaration(NodeListOptional n0, Type n1, VariableDeclarator n2, NodeListOptional n3) {
      f0 = n0;
      f1 = n1;
      f2 = n2;
      f3 = n3;
      f4 = new NodeToken(";");
   }

   public void accept(EDU.purdue.jtb.visitor.Visitor v) {
      v.visit(this);
   }
   public <R,A> R accept(EDU.purdue.jtb.visitor.GJVisitor<R,A> v, A argu) {
      return v.visit(this,argu);
   }
   public <R> R accept(EDU.purdue.jtb.visitor.GJNoArguVisitor<R> v) {
      return v.visit(this);
   }
   public <A> void accept(EDU.purdue.jtb.visitor.GJVoidVisitor<A> v, A argu) {
      v.visit(this,argu);
   }
   public void accept(EDU.purdue.jtb.visitor.ThreadedVisitor v) {
      v.visit(this);
   }
}

